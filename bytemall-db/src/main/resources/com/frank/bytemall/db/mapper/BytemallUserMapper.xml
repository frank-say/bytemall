<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.frank.bytemall.db.mapper.BytemallUserMapper">
  <resultMap id="BaseResultMap" type="com.frank.bytemall.db.model.BytemallUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="unionid" jdbcType="VARCHAR" property="unionid" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="session_key" jdbcType="VARCHAR" property="sessionKey" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, openid, unionid, gender, birthday, nickname, mobile, avatar, city, province, 
    country, add_time, session_key, update_time, deleted
  </sql>
  <select id="selectByExample" parameterType="com.frank.bytemall.db.model.BytemallUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bytemall_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from bytemall_user
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bytemall_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from bytemall_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bytemall_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.frank.bytemall.db.model.BytemallUserExample">
    delete from bytemall_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.frank.bytemall.db.model.BytemallUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bytemall_user (openid, unionid, gender, 
      birthday, nickname, mobile, 
      avatar, city, province, 
      country, add_time, session_key, 
      update_time, deleted)
    values (#{openid,jdbcType=VARCHAR}, #{unionid,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT}, 
      #{birthday,jdbcType=DATE}, #{nickname,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, 
      #{country,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, #{sessionKey,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.frank.bytemall.db.model.BytemallUser">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bytemall_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="openid != null">
        openid,
      </if>
      <if test="unionid != null">
        unionid,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="sessionKey != null">
        session_key,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null">
        #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sessionKey != null">
        #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.frank.bytemall.db.model.BytemallUserExample" resultType="java.lang.Long">
    select count(*) from bytemall_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bytemall_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.openid != null">
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.unionid != null">
        unionid = #{record.unionid,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sessionKey != null">
        session_key = #{record.sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bytemall_user
    set id = #{record.id,jdbcType=BIGINT},
      openid = #{record.openid,jdbcType=VARCHAR},
      unionid = #{record.unionid,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=TINYINT},
      birthday = #{record.birthday,jdbcType=DATE},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      session_key = #{record.sessionKey,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.frank.bytemall.db.model.BytemallUser">
    update bytemall_user
    <set>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null">
        unionid = #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sessionKey != null">
        session_key = #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.frank.bytemall.db.model.BytemallUser">
    update bytemall_user
    set openid = #{openid,jdbcType=VARCHAR},
      unionid = #{unionid,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      birthday = #{birthday,jdbcType=DATE},
      nickname = #{nickname,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      session_key = #{sessionKey,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.frank.bytemall.db.model.BytemallUserExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from bytemall_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from bytemall_user
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into bytemall_user
    (openid, unionid, gender, birthday, nickname, mobile, avatar, city, province, country, 
      add_time, session_key, update_time, deleted)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.openid,jdbcType=VARCHAR}, #{item.unionid,jdbcType=VARCHAR}, #{item.gender,jdbcType=TINYINT}, 
        #{item.birthday,jdbcType=DATE}, #{item.nickname,jdbcType=VARCHAR}, #{item.mobile,jdbcType=VARCHAR}, 
        #{item.avatar,jdbcType=VARCHAR}, #{item.city,jdbcType=VARCHAR}, #{item.province,jdbcType=VARCHAR}, 
        #{item.country,jdbcType=VARCHAR}, #{item.addTime,jdbcType=TIMESTAMP}, #{item.sessionKey,jdbcType=VARCHAR}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.deleted,jdbcType=BIT})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into bytemall_user (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'openid'.toString() == column.value">
          #{item.openid,jdbcType=VARCHAR}
        </if>
        <if test="'unionid'.toString() == column.value">
          #{item.unionid,jdbcType=VARCHAR}
        </if>
        <if test="'gender'.toString() == column.value">
          #{item.gender,jdbcType=TINYINT}
        </if>
        <if test="'birthday'.toString() == column.value">
          #{item.birthday,jdbcType=DATE}
        </if>
        <if test="'nickname'.toString() == column.value">
          #{item.nickname,jdbcType=VARCHAR}
        </if>
        <if test="'mobile'.toString() == column.value">
          #{item.mobile,jdbcType=VARCHAR}
        </if>
        <if test="'avatar'.toString() == column.value">
          #{item.avatar,jdbcType=VARCHAR}
        </if>
        <if test="'city'.toString() == column.value">
          #{item.city,jdbcType=VARCHAR}
        </if>
        <if test="'province'.toString() == column.value">
          #{item.province,jdbcType=VARCHAR}
        </if>
        <if test="'country'.toString() == column.value">
          #{item.country,jdbcType=VARCHAR}
        </if>
        <if test="'add_time'.toString() == column.value">
          #{item.addTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'session_key'.toString() == column.value">
          #{item.sessionKey,jdbcType=VARCHAR}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'deleted'.toString() == column.value">
          #{item.deleted,jdbcType=BIT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <insert id="upsertSelective" keyColumn="id" keyProperty="id" parameterType="com.frank.bytemall.db.model.BytemallUser" useGeneratedKeys="true">
    insert into bytemall_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="unionid != null">
        unionid,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="sessionKey != null">
        session_key,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null">
        #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sessionKey != null">
        #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="unionid != null">
        unionid = #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sessionKey != null">
        session_key = #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <insert id="upsert" keyColumn="id" keyProperty="id" parameterType="com.frank.bytemall.db.model.BytemallUser" useGeneratedKeys="true">
    insert into bytemall_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      openid,
      unionid,
      gender,
      birthday,
      nickname,
      mobile,
      avatar,
      city,
      province,
      country,
      add_time,
      session_key,
      update_time,
      deleted,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{openid,jdbcType=VARCHAR},
      #{unionid,jdbcType=VARCHAR},
      #{gender,jdbcType=TINYINT},
      #{birthday,jdbcType=DATE},
      #{nickname,jdbcType=VARCHAR},
      #{mobile,jdbcType=VARCHAR},
      #{avatar,jdbcType=VARCHAR},
      #{city,jdbcType=VARCHAR},
      #{province,jdbcType=VARCHAR},
      #{country,jdbcType=VARCHAR},
      #{addTime,jdbcType=TIMESTAMP},
      #{sessionKey,jdbcType=VARCHAR},
      #{updateTime,jdbcType=TIMESTAMP},
      #{deleted,jdbcType=BIT},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      openid = #{openid,jdbcType=VARCHAR},
      unionid = #{unionid,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      birthday = #{birthday,jdbcType=DATE},
      nickname = #{nickname,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      session_key = #{sessionKey,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT},
    </trim>
  </insert>
</mapper>